services:
  backend:
    build:
      context: .
    container_name: project_tracker_backend
    env_file:
      - .env                
    environment:
      DATABASE_URL: postgresql://postgres:postgres@postgres:5432/postgres
      UVICORN_HOST: 0.0.0.0
      UVICORN_PORT: 8000
      PYTHONPATH: /app
    command: >
      sh -c "uvicorn app.main:app --host ${UVICORN_HOST:-0.0.0.0} --port ${UVICORN_PORT:-8000} --workers 3"
    volumes:
      - ./uploaded_files:/app/uploaded_files
      - ./static:/app/static
    ports:
      - "8000:8000"
    depends_on:
      postgres:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 30s
      timeout: 5s
      retries: 3

  postgres:
    image: postgres:14-alpine
    container_name: project_tracker_postgres
    restart: unless-stopped
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    volumes:
      - pgdata:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 3s
      retries: 5

volumes:
  pgdata:
